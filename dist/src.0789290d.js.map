{"version":3,"sources":["src/index.ts"],"names":[],"mappings":";;;AA0DM,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA1DN,QAAA,eAEA,IAAM,EAAa,SAAS,eAAe,OACrC,EAAe,SAAS,eAAe,SACvC,EAAY,EACZ,EAAY,EAEd,EAAa,CACf,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,KAEP,EAAc,IAElB,SAAS,EAAW,EAAa,GAAyB,IAAZ,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAG,GAAA,GAChD,EAAO,SAAS,cAAc,UAKpC,OAJA,EAAK,aAAa,WAAY,EAAI,YAClC,EAAK,aAAa,WAAY,EAAI,YAClC,EAAK,aAAa,eAAgB,GAClC,EAAK,UAAU,IAAI,QACZ,EAGT,SAAS,IACP,IAAK,EAAY,MAAM,IAAI,MAAM,mBACjC,IAAK,EAAc,MAAM,IAAI,MAAM,qBACnC,EAAa,UAAY,GACzB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAW,IAC7B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAW,IAC7B,EAAa,YAAY,EAAW,EAAG,EAAG,EAAW,GAAG,KAG5D,IAAM,EAAiB,SAAS,eAAe,gBAC3C,GACF,EAAe,SAEjB,IAAM,EAAc,SAAS,cAAc,KAC3C,EAAY,GAAK,eACjB,EAAY,UAAS,cAAA,OAAiB,GACtC,EAAY,UAAU,IAAI,gBAC1B,EAAW,aAAa,EAAa,SAAS,eAAe,UAG/D,SAAS,IACP,IAAM,EAAc,SAAS,eAAe,SAC5C,IAAK,EAAa,MAAM,IAAI,MAAM,mBAClC,EAAY,iBAAiB,QAAS,WACpC,EAAa,CACX,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,KAEX,EAAc,IACd,MAEF,IAGF","file":"src.0789290d.js","sourceRoot":"..","sourcesContent":["import \"./style.css\";\r\n\r\nconst appElement = document.getElementById(\"app\");\r\nconst boardElement = document.getElementById(\"board\");\r\nconst ROW_COUNT = 3;\r\nconst COL_COUNT = 3;\r\n\r\nlet boardState = [\r\n  [\"\", \"\", \"\"],\r\n  [\"\", \"\", \"\"],\r\n  [\"\", \"\", \"\"]\r\n];\r\nlet currentMove = \"X\";\r\n\r\nfunction createCell(row: number, col: number, content = \"\") {\r\n  const cell = document.createElement(\"button\");\r\n  cell.setAttribute(\"data-row\", row.toString());\r\n  cell.setAttribute(\"data-col\", col.toString());\r\n  cell.setAttribute(\"data-content\", content);\r\n  cell.classList.add(\"cell\");\r\n  return cell;\r\n}\r\n\r\nfunction renderBoard() {\r\n  if (!appElement) throw new Error(\"Cannot find app\");\r\n  if (!boardElement) throw new Error(\"Cannot find board\");\r\n  boardElement.innerHTML = \"\";\r\n  for (let i = 0; i < ROW_COUNT; i++) {\r\n    for (let j = 0; j < COL_COUNT; j++) {\r\n      boardElement.appendChild(createCell(i, j, boardState[i][j]));\r\n    }\r\n  }\r\n  const oldMoveElement = document.getElementById(\"move-element\");\r\n  if (oldMoveElement) {\r\n    oldMoveElement.remove();\r\n  }\r\n  const moveElement = document.createElement(\"p\");\r\n  moveElement.id = \"move-element\";\r\n  moveElement.innerText = `Next Move: ${currentMove}`;\r\n  moveElement.classList.add(\"current-move\");\r\n  appElement.insertBefore(moveElement, document.getElementById(\"reset\"));\r\n}\r\n\r\nfunction init() {\r\n  const resetButton = document.getElementById(\"reset\");\r\n  if (!resetButton) throw new Error(\"No Reset button\");\r\n  resetButton.addEventListener(\"click\", () => {\r\n    boardState = [\r\n      [\"\", \"\", \"\"],\r\n      [\"\", \"\", \"\"],\r\n      [\"\", \"\", \"\"]\r\n    ];\r\n    currentMove = \"X\";\r\n    renderBoard();\r\n  });\r\n  renderBoard();\r\n}\r\n\r\ninit();\r\n"]}